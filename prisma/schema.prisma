// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id           String               @id @default(cuid())
  createdAt    DateTime             @default(now())
  name         String               @unique
  industry     String
  email        String?
  number       String?
  appointments CompanyAppointment[]
  companyRoles CompanyRoles[]
}

model CompanyRoles {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  role      String?
  userId    String
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model CompanyAppointment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      String
  examType  String
  planType  String?
  covid     String?
  local     String?
  location  String
  companyId String
  userId    String
  company   Company  @relation(fields: [companyId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model User {
  id               String               @id @default(cuid())
  createdAt        DateTime             @default(now())
  updatedAt        DateTime             @updatedAt
  name             String
  birthDate        String
  gender           String?
  nacionality      String?
  number           String?
  idNumber         String?              @unique
  email            String?
  address          String?
  companyRoles     CompanyRoles[]
  appointments     CompanyAppointment[]
  emergencyConsult EmergencyConsult[]
}

model EmergencyTriage {
  id               String  @id @default(cuid())
  manchesterDegree String //Red, Orange, Yellow, Green
  weight           String
  height           String
  bloodType        String
  tMin             String
  tMax             String
  degrees          String
  oxygen           String
  complaint        String?
  sintoms          String

  emergencyConsult   EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String           @unique
}

model EmergencyConsult {
  id              String           @id @default(cuid())
  createdAt       DateTime         @default(now())
  entryDate       String
  entryTime       String
  
  release         Release?
  emergencyTransfer EmergencyTransfer?
  medicalFile     MedicalComments[] 
  nurseFile       NurseComments[]
  emergencyTriage EmergencyTriage?
  admission       Admission?
  medicalItems    MedicalItems[]
  medicalExams    MedicalExams[]
  insurance       Insurance?

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model MedicalComments {
  id  String @id @default(cuid())
  createdAt DateTime @default(now())
  createdBy String
  comment String

  emergencyConsult EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String
}

model NurseComments {
  id  String @id @default(cuid())
  createdAt DateTime @default(now())  
  createdBy String
  comment String 

  emergencyConsult EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String
}

model MedicalItems {
  id       String @id @default(cuid())
  name     String
  quantity String

  emergencyConsult   EmergencyConsult? @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String?
}

model MedicalExams {
  id          String  @id @default(cuid())
  date        String
  hour        String
  name        String
  description String?

  emergencyConsult   EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String
}

model EmergencyMeals {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  date        String
  time        String
  typeOfMeal  String
  description String

  admission   Admission @relation(fields: [admissionId], references: [id])
  admissionId String
}

model Admission {
  id          String  @id @default(cuid())
  entryDate   String
  entryHour   String
  bedNumber   String
  description String?

  emergencyMeals     EmergencyMeals[]
  emergencyConsult   EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String           @unique
}

model Release {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  exitDate String
  exitTime String
  addInfo String?

  emergencyConsult EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String @unique
}

model Insurance {
  id       String  @id @default(cuid())
  name     String
  idNumber String?

  emergencyConsult   EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String           @unique
}

model EmergencyTransfer {
  id  String @id @default(cuid())
  createdAt DateTime @default(now())
  transportType String 
  whereTo String
  reason String
  orderBy String

  emergencyConsult EmergencyConsult @relation(fields: [emergencyConsultId], references: [id])
  emergencyConsultId String @unique
}
